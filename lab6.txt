diff --git a/src/HAL9000/src/syscall.c b/src/HAL9000/src/syscall.c
index 1576f7f..2bfee86 100644
--- a/src/HAL9000/src/syscall.c
+++ b/src/HAL9000/src/syscall.c
@@ -7,6 +7,7 @@
 #include "mmu.h"
 #include "process_internal.h"
 #include "dmp_cpu.h"
+#include "thread_internal.h"
 
 extern void SyscallEntry();
 
@@ -67,6 +68,18 @@ SyscallHandler(
         case SyscallIdIdentifyVersion:
             status = SyscallValidateInterface((SYSCALL_IF_VERSION)*pSyscallParameters);
             break;
+
+       /* case SyscallIdFileWrite:
+            status = SyscallFileWrite((UM_HANDLE) pSyscallParameters[0] , UM_FILE_HANDLE_STDOUT, (QWORD)pSyscallParameters[2], (QWORD)pSyscallParameters[3]);
+            break;*/
+
+        case SyscallIdProcessExit:
+            ProcessTerminate((PPROCESS)pSyscallParameters[0]);
+            break;
+
+        case SyscallIdThreadExit:
+            ThreadExit((STATUS)pSyscallParameters[0]);
+            break;
         // STUDENT TODO: implement the rest of the syscalls
         default:
             LOG_ERROR("Unimplemented syscall called from User-space!\n");
@@ -169,4 +182,21 @@ SyscallValidateInterface(
     return STATUS_SUCCESS;
 }
 
-// STUDENT TODO: implement the rest of the syscalls
\ No newline at end of file
+// STUDENT TODO: implement the rest of the syscalls
+/*
+STATUS
+SyscallFileWrite(
+    IN UM_HANDLE FileHandle,
+    IN_READS_BYTES(BytesToWrite) 
+    PVOID Buffer,
+    IN QWORD BytesToWrite,
+    OUT QWORD * BytesWritten)
+{
+    UNREFERENCED_PARAMETER(FileHandle);
+    UNREFERENCED_PARAMETER(BytesToWrite);
+    
+        LOG("[%s]\n", ProcessGetName(NULL));
+        *BytesWritten = 8;
+
+}*/
+    
\ No newline at end of file
diff --git a/src/Usermode/UsermodeLibrary/src/syscall_if.c b/src/Usermode/UsermodeLibrary/src/syscall_if.c
index 7248b5b..97306de 100644
--- a/src/Usermode/UsermodeLibrary/src/syscall_if.c
+++ b/src/Usermode/UsermodeLibrary/src/syscall_if.c
@@ -195,4 +195,4 @@ SyscallFileWrite(
     )
 {
     return SyscallEntry(SyscallIdFileWrite, FileHandle, Buffer, BytesToWrite, BytesWritten);
-}
+}
\ No newline at end of file
